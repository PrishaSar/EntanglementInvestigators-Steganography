//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum\",\"Name\":\"RunGroverSearch\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":10,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\marcu\\\\OneDrive\\\\Documents\\\\GitHub\\\\EntanglementInvestigators-Steganography\\\\myQuantumProject\\\\Program.qs\",\"Position\":{\"Item1\":11,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum\",\"Name\":\"RunGroverSearch\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\marcu\\\\OneDrive\\\\Documents\\\\GitHub\\\\EntanglementInvestigators-Steganography\\\\myQuantumProject\\\\Program.qs\",\"Position\":{\"Item1\":11,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum\",\"Name\":\"ApplyOracle\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\marcu\\\\OneDrive\\\\Documents\\\\GitHub\\\\EntanglementInvestigators-Steganography\\\\myQuantumProject\\\\Program.qs\",\"Position\":{\"Item1\":15,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qs\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":23},\"Item2\":{\"Line\":1,\"Column\":25}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"target\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":37},\"Item2\":{\"Line\":1,\"Column\":43}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum\",\"Name\":\"ApplyOracle\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\marcu\\\\OneDrive\\\\Documents\\\\GitHub\\\\EntanglementInvestigators-Steganography\\\\myQuantumProject\\\\Program.qs\",\"Position\":{\"Item1\":15,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum\",\"Name\":\"ApplyOracle\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\marcu\\\\OneDrive\\\\Documents\\\\GitHub\\\\EntanglementInvestigators-Steganography\\\\myQuantumProject\\\\Program.qs\",\"Position\":{\"Item1\":15,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":63},\"Item2\":{\"Line\":1,\"Column\":72}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Quantum.ApplyOracle\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum\",\"Name\":\"ApplyOracle\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\marcu\\\\OneDrive\\\\Documents\\\\GitHub\\\\EntanglementInvestigators-Steganography\\\\myQuantumProject\\\\Program.qs\",\"Position\":{\"Item1\":15,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":63},\"Item2\":{\"Line\":1,\"Column\":72}},\"Documentation\":[\"automatically generated QsControlled specialization for Quantum.ApplyOracle\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum\",\"Name\":\"ApplyOracle\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\marcu\\\\OneDrive\\\\Documents\\\\GitHub\\\\EntanglementInvestigators-Steganography\\\\myQuantumProject\\\\Program.qs\",\"Position\":{\"Item1\":15,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":63},\"Item2\":{\"Line\":1,\"Column\":72}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Quantum.ApplyOracle\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum\",\"Name\":\"ApplyGroverIteration\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\marcu\\\\OneDrive\\\\Documents\\\\GitHub\\\\EntanglementInvestigators-Steganography\\\\myQuantumProject\\\\Program.qs\",\"Position\":{\"Item1\":23,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":31}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qs\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":32},\"Item2\":{\"Line\":1,\"Column\":34}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum\",\"Name\":\"ApplyGroverIteration\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\marcu\\\\OneDrive\\\\Documents\\\\GitHub\\\\EntanglementInvestigators-Steganography\\\\myQuantumProject\\\\Program.qs\",\"Position\":{\"Item1\":23,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":31}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum\",\"Name\":\"GroverSearch\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\marcu\\\\OneDrive\\\\Documents\\\\GitHub\\\\EntanglementInvestigators-Steganography\\\\myQuantumProject\\\\Program.qs\",\"Position\":{\"Item1\":37,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":23}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum\",\"Name\":\"GroverSearch\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\marcu\\\\OneDrive\\\\Documents\\\\GitHub\\\\EntanglementInvestigators-Steganography\\\\myQuantumProject\\\\Program.qs\",\"Position\":{\"Item1\":37,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":23}},\"Documentation\":[]}")]
#line hidden
namespace Quantum
{
    [SourceLocation("C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs", OperationFunctor.Body, 12, 16)]
    public partial class RunGroverSearch : Operation<QVoid, IQArray<Result>>, ICallable
    {
        public RunGroverSearch(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "RunGroverSearch";
        String ICallable.FullName => "Quantum.RunGroverSearch";
        public static EntryPointInfo<QVoid, IQArray<Result>> Info => new EntryPointInfo<QVoid, IQArray<Result>>(typeof(RunGroverSearch));
        protected ICallable<QVoid, IQArray<Result>> GroverSearch__
        {
            get;
            set;
        }

        public override Func<QVoid, IQArray<Result>> __Body__ => (__in__) =>
        {
#line 13 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            return GroverSearch__.Apply(QVoid.Instance);
        }

        ;
        public override void __Init__()
        {
            this.GroverSearch__ = this.__Factory__.Get<ICallable<QVoid, IQArray<Result>>>(typeof(GroverSearch));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(IQArray<Result> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Result>> Run(IOperationFactory __m__)
        {
            return __m__.Run<RunGroverSearch, QVoid, IQArray<Result>>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs", OperationFunctor.Body, 16, 24)]
    [SourceLocation("C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs", OperationFunctor.Adjoint, 16, 24)]
    [SourceLocation("C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs", OperationFunctor.Controlled, 16, 24)]
    [SourceLocation("C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs", OperationFunctor.ControlledAdjoint, 16, 24)]
    public partial class ApplyOracle : Unitary<(IQArray<Qubit>,Qubit)>, ICallable
    {
        public ApplyOracle(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,Qubit)>, IApplyData
        {
            public In((IQArray<Qubit>,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ApplyOracle";
        String ICallable.FullName => "Quantum.ApplyOracle";
        protected IUnitary<(Pauli,Boolean,IQArray<Boolean>,IQArray<Qubit>)> Microsoft__Quantum__Canon__ApplyPauliFromBitString
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,Qubit), QVoid> __Body__ => (__in__) =>
        {
            var (qs,target) = __in__;
#line 18 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            Microsoft__Quantum__Canon__ApplyPauliFromBitString.Apply((Pauli.PauliX, false, new QArray<Boolean>(true, true), qs));
#line 20 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            Microsoft__Quantum__Intrinsic__X.Apply(target);
#line 16 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            Microsoft__Quantum__Canon__ApplyPauliFromBitString.Adjoint.Apply((Pauli.PauliX, false, new QArray<Boolean>(true, true), qs));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,Qubit), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (qs,target) = __in__;
#line 16 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            Microsoft__Quantum__Canon__ApplyPauliFromBitString.Apply((Pauli.PauliX, false, new QArray<Boolean>(true, true), qs));
#line 16 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(target);
#line 16 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            Microsoft__Quantum__Canon__ApplyPauliFromBitString.Adjoint.Apply((Pauli.PauliX, false, new QArray<Boolean>(true, true), qs));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(IQArray<Qubit>,Qubit)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(qs,target)) = __in__;
#line 16 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            Microsoft__Quantum__Canon__ApplyPauliFromBitString.Apply((Pauli.PauliX, false, new QArray<Boolean>(true, true), qs));
#line 16 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            Microsoft__Quantum__Intrinsic__X.Controlled.Apply((__controlQubits__, target));
#line 16 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            Microsoft__Quantum__Canon__ApplyPauliFromBitString.Adjoint.Apply((Pauli.PauliX, false, new QArray<Boolean>(true, true), qs));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(IQArray<Qubit>,Qubit)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(qs,target)) = __in__;
#line 16 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            Microsoft__Quantum__Canon__ApplyPauliFromBitString.Apply((Pauli.PauliX, false, new QArray<Boolean>(true, true), qs));
#line 16 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            Microsoft__Quantum__Intrinsic__X.Adjoint.Controlled.Apply((__controlQubits__, target));
#line 16 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            Microsoft__Quantum__Canon__ApplyPauliFromBitString.Adjoint.Apply((Pauli.PauliX, false, new QArray<Boolean>(true, true), qs));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Canon__ApplyPauliFromBitString = this.__Factory__.Get<IUnitary<(Pauli,Boolean,IQArray<Boolean>,IQArray<Qubit>)>>(typeof(global::Microsoft.Quantum.Canon.ApplyPauliFromBitString));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,Qubit) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> qs, Qubit target)
        {
            return __m__.Run<ApplyOracle, (IQArray<Qubit>,Qubit), QVoid>((qs, target));
        }
    }

    [SourceLocation("C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs", OperationFunctor.Body, 24, 38)]
    public partial class ApplyGroverIteration : Operation<IQArray<Qubit>, QVoid>, ICallable
    {
        public ApplyGroverIteration(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "ApplyGroverIteration";
        String ICallable.FullName => "Quantum.ApplyGroverIteration";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected IUnitary<(IQArray<Qubit>,Qubit)> ApplyOracle__
        {
            get;
            set;
        }

        protected IAdjointable Microsoft__Quantum__Canon__ApplyToEachA
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__Z
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> Reset__
        {
            get;
            set;
        }

        public override Func<IQArray<Qubit>, QVoid> __Body__ => (__in__) =>
        {
            var qs = __in__;
#line hidden
            {
#line 25 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                var target = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 26 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    Microsoft__Quantum__Intrinsic__X.Apply(target);
#line 27 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(target);
#line 28 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    ApplyOracle__.Apply((qs, target));
#line 29 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    ApplyOracle__.Adjoint.Apply((qs, target));
#line 30 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    Microsoft__Quantum__Canon__ApplyToEachA.Apply((Microsoft__Quantum__Intrinsic__H, qs));
#line 31 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    Microsoft__Quantum__Canon__ApplyToEachA.Apply((Microsoft__Quantum__Intrinsic__X, qs));
#line 32 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    Microsoft__Quantum__Intrinsic__Z.Controlled.Apply((new QArray<Qubit>(qs[0L]), qs[1L]));
#line 33 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    Microsoft__Quantum__Canon__ApplyToEachA.Apply((Microsoft__Quantum__Intrinsic__X, qs));
#line 34 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    Microsoft__Quantum__Canon__ApplyToEachA.Apply((Microsoft__Quantum__Intrinsic__H, qs));
#line 35 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    Reset__.Apply(target);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(target);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.ApplyOracle__ = this.__Factory__.Get<IUnitary<(IQArray<Qubit>,Qubit)>>(typeof(ApplyOracle));
            this.Microsoft__Quantum__Canon__ApplyToEachA = this.__Factory__.Get<IAdjointable>(typeof(global::Microsoft.Quantum.Canon.ApplyToEachA<>));
            this.Microsoft__Quantum__Intrinsic__Z = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.Z));
            this.Reset__ = this.__Factory__.Get<ICallable<Qubit, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Reset));
        }

        public override IApplyData __DataIn__(IQArray<Qubit> data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> qs)
        {
            return __m__.Run<ApplyGroverIteration, IQArray<Qubit>, QVoid>(qs);
        }
    }

    [SourceLocation("C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs", OperationFunctor.Body, 38, -1)]
    public partial class GroverSearch : Operation<QVoid, IQArray<Result>>, ICallable
    {
        public GroverSearch(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "GroverSearch";
        String ICallable.FullName => "Quantum.GroverSearch";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Canon__ApplyToEach
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ApplyGroverIteration__
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, IQArray<Result>> __Body__ => (__in__) =>
        {
#line 39 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            var result = new QArray<Result>(Result.Zero, Result.Zero);
#line hidden
            {
#line 40 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                var qs = Allocate__.Apply(2L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 41 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    Microsoft__Quantum__Canon__ApplyToEach.Apply((Microsoft__Quantum__Intrinsic__H, qs));
#line 42 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    ApplyGroverIteration__.Apply(qs);
#line 43 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    result.Modify(0L, Microsoft__Quantum__Intrinsic__M.Apply(qs[0L]));
#line 44 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    result.Modify(1L, Microsoft__Quantum__Intrinsic__M.Apply(qs[1L]));
#line 45 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
                    ResetAll__.Apply(qs);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(qs);
                    }
                }
            }

#line 47 "C:\\Users\\marcu\\OneDrive\\Documents\\GitHub\\EntanglementInvestigators-Steganography\\myQuantumProject\\Program.qs"
            return result;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Canon__ApplyToEach = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Canon.ApplyToEach<>));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.ApplyGroverIteration__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(ApplyGroverIteration));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(IQArray<Result> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Result>> Run(IOperationFactory __m__)
        {
            return __m__.Run<GroverSearch, QVoid, IQArray<Result>>(QVoid.Instance);
        }
    }
}