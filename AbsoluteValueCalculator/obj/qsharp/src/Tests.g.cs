//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"RHStest1\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"QuantumSimulator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":7},\"Item2\":{\"Line\":1,\"Column\":25}}]}},\"Offset\":{\"Item1\":9,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":10,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"RHStest1\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":10,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"RHStest2\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"QuantumSimulator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":7},\"Item2\":{\"Line\":1,\"Column\":25}}]}},\"Offset\":{\"Item1\":24,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":25,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"RHStest2\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":25,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"RHStest3\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"QuantumSimulator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":7},\"Item2\":{\"Line\":1,\"Column\":25}}]}},\"Offset\":{\"Item1\":43,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":44,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"RHStest3\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":44,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"RFStest1\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"QuantumSimulator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":7},\"Item2\":{\"Line\":1,\"Column\":25}}]}},\"Offset\":{\"Item1\":62,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":63,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"RFStest1\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":63,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"RFStest2\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"QuantumSimulator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":7},\"Item2\":{\"Line\":1,\"Column\":25}}]}},\"Offset\":{\"Item1\":86,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":87,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"RFStest2\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":87,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"RFStest3\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"QuantumSimulator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":7},\"Item2\":{\"Line\":1,\"Column\":25}}]}},\"Offset\":{\"Item1\":108,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":109,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"RFStest3\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":109,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"COtest1\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"QuantumSimulator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":7},\"Item2\":{\"Line\":1,\"Column\":25}}]}},\"Offset\":{\"Item1\":132,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":133,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"COtest1\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":133,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"COtest2\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"QuantumSimulator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":7},\"Item2\":{\"Line\":1,\"Column\":25}}]}},\"Offset\":{\"Item1\":151,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":152,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"COtest2\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":152,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"COtest3\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"QuantumSimulator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":7},\"Item2\":{\"Line\":1,\"Column\":25}}]}},\"Offset\":{\"Item1\":172,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":173,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"COtest3\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":173,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"CAVtest1\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"QuantumSimulator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":7},\"Item2\":{\"Line\":1,\"Column\":25}}]}},\"Offset\":{\"Item1\":194,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":195,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"CAVtest1\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":195,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"CAVtest2\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"QuantumSimulator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":7},\"Item2\":{\"Line\":1,\"Column\":25}}]}},\"Offset\":{\"Item1\":212,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":213,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"CAVtest2\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":213,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"CAVtest3\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"QuantumSimulator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":7},\"Item2\":{\"Line\":1,\"Column\":25}}]}},\"Offset\":{\"Item1\":234,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":235,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"CAVtest3\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":235,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"V\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":257,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":12}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"input\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":13},\"Item2\":{\"Line\":1,\"Column\":18}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Qubit\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"V\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":257,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":12}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"RHS\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":266,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"aQubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":15},\"Item2\":{\"Line\":1,\"Column\":21}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"bQubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":30},\"Item2\":{\"Line\":1,\"Column\":36}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"outputRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":45},\"Item2\":{\"Line\":1,\"Column\":59}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"RHS\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":266,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"RFS\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":292,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"aQubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":15},\"Item2\":{\"Line\":1,\"Column\":21}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"bQubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":30},\"Item2\":{\"Line\":1,\"Column\":36}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"cQubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":45},\"Item2\":{\"Line\":1,\"Column\":51}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"outputRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":60},\"Item2\":{\"Line\":1,\"Column\":74}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"RFS\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":292,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"CO\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":321,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":13}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"sRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":14},\"Item2\":{\"Line\":1,\"Column\":23}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"outputRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":34},\"Item2\":{\"Line\":1,\"Column\":48}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"CO\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":321,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":13}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"files\",\"Name\":\"CAV\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":355,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"aRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":15},\"Item2\":{\"Line\":1,\"Column\":24}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"bRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":35},\"Item2\":{\"Line\":1,\"Column\":44}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"outputRegister\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":55},\"Item2\":{\"Line\":1,\"Column\":69}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"files\",\"Name\":\"CAV\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\DotTheBot\\\\Desktop\\\\AbsoluteValueCalculator\\\\absolutevaluecalculator\\\\Tests.qs\",\"Position\":{\"Item1\":355,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
#line hidden
namespace files
{
    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 11, 26)]
    public partial class RHStest1 : Operation<QVoid, QVoid>, ICallable
    {
        public RHStest1(IOperationFactory m) : base(m)
        {
        }

        public class QuantumSimulator
        {
            public QuantumSimulator(Xunit.Abstractions.ITestOutputHelper Output)
            {
                this.Output = Output;
            }

            internal Xunit.Abstractions.ITestOutputHelper Output
            {
                get;
            }

            [Xunit.Fact()]
            [Xunit.Trait("Target", "QuantumSimulator")]
            [Xunit.Trait("Name", "RHStest1")]
            public void RHStest1()
#line 11 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            {
                var sim = new Microsoft.Quantum.Simulation.Simulators.QuantumSimulator();
                if (sim is Microsoft.Quantum.Simulation.Common.SimulatorBase baseSim && this.Output != null)
                {
                    baseSim.OnLog += this.Output.WriteLine;
                }

                try
                {
                    sim.Execute<RHStest1, QVoid, QVoid>(QVoid.Instance);
                }
                catch
                {
#line 11 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                    Xunit.Assert.True(false, "Q# Test failed. For details see the Standard output below.");
                }
                finally
                {
                    if (sim is IDisposable disposeSim)
                    {
                        disposeSim.Dispose();
                    }
                }
            }
        }

        String ICallable.Name => "RHStest1";
        String ICallable.FullName => "files.RHStest1";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable<(Qubit,Qubit,IQArray<Qubit>), QVoid> RHS__
        {
            get;
            set;
        }

        protected IUnitary<IQArray<Qubit>> Microsoft__Quantum__Diagnostics__AssertAllZero
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> Reset__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 12 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var a = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 13 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var b = Allocate__.Apply();
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line hidden
                            {
#line 14 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                var output = Allocate__.Apply(4L);
#line hidden
                                bool __arg3__ = true;
                                try
                                {
#line 16 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    RHS__.Apply((a, b, output));
#line 18 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Diagnostics__AssertAllZero.Apply(output);
#line 20 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Reset__.Apply(a);
#line 21 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Reset__.Apply(b);
#line 22 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    ResetAll__.Apply(output);
                                }
#line hidden
                                catch
                                {
                                    __arg3__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg3__)
                                    {
#line hidden
                                        Release__.Apply(output);
                                    }
                                }
                            }
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(b);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(a);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.RHS__ = this.__Factory__.Get<ICallable<(Qubit,Qubit,IQArray<Qubit>), QVoid>>(typeof(RHS));
            this.Microsoft__Quantum__Diagnostics__AssertAllZero = this.__Factory__.Get<IUnitary<IQArray<Qubit>>>(typeof(global::Microsoft.Quantum.Diagnostics.AssertAllZero));
            this.Reset__ = this.__Factory__.Get<ICallable<Qubit, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Reset));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<RHStest1, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 26, 45)]
    public partial class RHStest2 : Operation<QVoid, QVoid>, ICallable
    {
        public RHStest2(IOperationFactory m) : base(m)
        {
        }

        public class QuantumSimulator
        {
            public QuantumSimulator(Xunit.Abstractions.ITestOutputHelper Output)
            {
                this.Output = Output;
            }

            internal Xunit.Abstractions.ITestOutputHelper Output
            {
                get;
            }

            [Xunit.Fact()]
            [Xunit.Trait("Target", "QuantumSimulator")]
            [Xunit.Trait("Name", "RHStest2")]
            public void RHStest2()
#line 26 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            {
                var sim = new Microsoft.Quantum.Simulation.Simulators.QuantumSimulator();
                if (sim is Microsoft.Quantum.Simulation.Common.SimulatorBase baseSim && this.Output != null)
                {
                    baseSim.OnLog += this.Output.WriteLine;
                }

                try
                {
                    sim.Execute<RHStest2, QVoid, QVoid>(QVoid.Instance);
                }
                catch
                {
#line 26 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                    Xunit.Assert.True(false, "Q# Test failed. For details see the Standard output below.");
                }
                finally
                {
                    if (sim is IDisposable disposeSim)
                    {
                        disposeSim.Dispose();
                    }
                }
            }
        }

        String ICallable.Name => "RHStest2";
        String ICallable.FullName => "files.RHStest2";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<(Qubit,Qubit,IQArray<Qubit>), QVoid> RHS__
        {
            get;
            set;
        }

        protected IUnitary<(Result,Qubit)> Microsoft__Quantum__Diagnostics__AssertQubit
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> Reset__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 27 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var a = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 28 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var b = Allocate__.Apply();
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line hidden
                            {
#line 29 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                var output = Allocate__.Apply(4L);
#line hidden
                                bool __arg3__ = true;
                                try
                                {
#line 31 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Intrinsic__X.Apply(b);
#line 32 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    RHS__.Apply((a, b, output));
#line 37 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Diagnostics__AssertQubit.Apply((Result.One, output[3L]));
#line 39 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Reset__.Apply(a);
#line 40 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Reset__.Apply(b);
#line 41 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    ResetAll__.Apply(output);
                                }
#line hidden
                                catch
                                {
                                    __arg3__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg3__)
                                    {
#line hidden
                                        Release__.Apply(output);
                                    }
                                }
                            }
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(b);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(a);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.RHS__ = this.__Factory__.Get<ICallable<(Qubit,Qubit,IQArray<Qubit>), QVoid>>(typeof(RHS));
            this.Microsoft__Quantum__Diagnostics__AssertQubit = this.__Factory__.Get<IUnitary<(Result,Qubit)>>(typeof(global::Microsoft.Quantum.Diagnostics.AssertQubit));
            this.Reset__ = this.__Factory__.Get<ICallable<Qubit, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Reset));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<RHStest2, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 45, 64)]
    public partial class RHStest3 : Operation<QVoid, QVoid>, ICallable
    {
        public RHStest3(IOperationFactory m) : base(m)
        {
        }

        public class QuantumSimulator
        {
            public QuantumSimulator(Xunit.Abstractions.ITestOutputHelper Output)
            {
                this.Output = Output;
            }

            internal Xunit.Abstractions.ITestOutputHelper Output
            {
                get;
            }

            [Xunit.Fact()]
            [Xunit.Trait("Target", "QuantumSimulator")]
            [Xunit.Trait("Name", "RHStest3")]
            public void RHStest3()
#line 45 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            {
                var sim = new Microsoft.Quantum.Simulation.Simulators.QuantumSimulator();
                if (sim is Microsoft.Quantum.Simulation.Common.SimulatorBase baseSim && this.Output != null)
                {
                    baseSim.OnLog += this.Output.WriteLine;
                }

                try
                {
                    sim.Execute<RHStest3, QVoid, QVoid>(QVoid.Instance);
                }
                catch
                {
#line 45 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                    Xunit.Assert.True(false, "Q# Test failed. For details see the Standard output below.");
                }
                finally
                {
                    if (sim is IDisposable disposeSim)
                    {
                        disposeSim.Dispose();
                    }
                }
            }
        }

        String ICallable.Name => "RHStest3";
        String ICallable.FullName => "files.RHStest3";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<(Qubit,Qubit,IQArray<Qubit>), QVoid> RHS__
        {
            get;
            set;
        }

        protected IUnitary<(Result,Qubit)> Microsoft__Quantum__Diagnostics__AssertQubit
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> Reset__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 46 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var a = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 47 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var b = Allocate__.Apply();
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line hidden
                            {
#line 48 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                var output = Allocate__.Apply(4L);
#line hidden
                                bool __arg3__ = true;
                                try
                                {
#line 50 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Intrinsic__X.Apply(a);
#line 51 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    RHS__.Apply((a, b, output));
#line 56 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Diagnostics__AssertQubit.Apply((Result.Zero, output[3L]));
#line 58 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Reset__.Apply(a);
#line 59 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Reset__.Apply(b);
#line 60 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    ResetAll__.Apply(output);
                                }
#line hidden
                                catch
                                {
                                    __arg3__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg3__)
                                    {
#line hidden
                                        Release__.Apply(output);
                                    }
                                }
                            }
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(b);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(a);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.RHS__ = this.__Factory__.Get<ICallable<(Qubit,Qubit,IQArray<Qubit>), QVoid>>(typeof(RHS));
            this.Microsoft__Quantum__Diagnostics__AssertQubit = this.__Factory__.Get<IUnitary<(Result,Qubit)>>(typeof(global::Microsoft.Quantum.Diagnostics.AssertQubit));
            this.Reset__ = this.__Factory__.Get<ICallable<Qubit, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Reset));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<RHStest3, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 64, 88)]
    public partial class RFStest1 : Operation<QVoid, QVoid>, ICallable
    {
        public RFStest1(IOperationFactory m) : base(m)
        {
        }

        public class QuantumSimulator
        {
            public QuantumSimulator(Xunit.Abstractions.ITestOutputHelper Output)
            {
                this.Output = Output;
            }

            internal Xunit.Abstractions.ITestOutputHelper Output
            {
                get;
            }

            [Xunit.Fact()]
            [Xunit.Trait("Target", "QuantumSimulator")]
            [Xunit.Trait("Name", "RFStest1")]
            public void RFStest1()
#line 64 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            {
                var sim = new Microsoft.Quantum.Simulation.Simulators.QuantumSimulator();
                if (sim is Microsoft.Quantum.Simulation.Common.SimulatorBase baseSim && this.Output != null)
                {
                    baseSim.OnLog += this.Output.WriteLine;
                }

                try
                {
                    sim.Execute<RFStest1, QVoid, QVoid>(QVoid.Instance);
                }
                catch
                {
#line 64 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                    Xunit.Assert.True(false, "Q# Test failed. For details see the Standard output below.");
                }
                finally
                {
                    if (sim is IDisposable disposeSim)
                    {
                        disposeSim.Dispose();
                    }
                }
            }
        }

        String ICallable.Name => "RFStest1";
        String ICallable.FullName => "files.RFStest1";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<(Qubit,Qubit,Qubit,IQArray<Qubit>), QVoid> RFS__
        {
            get;
            set;
        }

        protected IUnitary<(Result,Qubit)> Microsoft__Quantum__Diagnostics__AssertQubit
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> Reset__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 65 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var a = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 66 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var b = Allocate__.Apply();
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line hidden
                            {
#line 67 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                var c = Allocate__.Apply();
#line hidden
                                bool __arg3__ = true;
                                try
                                {
#line hidden
                                    {
#line 68 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                        var output = Allocate__.Apply(5L);
#line hidden
                                        bool __arg4__ = true;
                                        try
                                        {
#line 70 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Microsoft__Quantum__Intrinsic__X.Apply(a);
#line 71 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Microsoft__Quantum__Intrinsic__X.Apply(b);
#line 73 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            RFS__.Apply((a, b, c, output));
#line 79 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Microsoft__Quantum__Diagnostics__AssertQubit.Apply((Result.Zero, output[4L]));
#line 81 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Reset__.Apply(a);
#line 82 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Reset__.Apply(b);
#line 83 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Reset__.Apply(c);
#line 84 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            ResetAll__.Apply(output);
                                        }
#line hidden
                                        catch
                                        {
                                            __arg4__ = false;
                                            throw;
                                        }
#line hidden
                                        finally
                                        {
                                            if (__arg4__)
                                            {
#line hidden
                                                Release__.Apply(output);
                                            }
                                        }
                                    }
                                }
#line hidden
                                catch
                                {
                                    __arg3__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg3__)
                                    {
#line hidden
                                        Release__.Apply(c);
                                    }
                                }
                            }
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(b);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(a);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.RFS__ = this.__Factory__.Get<ICallable<(Qubit,Qubit,Qubit,IQArray<Qubit>), QVoid>>(typeof(RFS));
            this.Microsoft__Quantum__Diagnostics__AssertQubit = this.__Factory__.Get<IUnitary<(Result,Qubit)>>(typeof(global::Microsoft.Quantum.Diagnostics.AssertQubit));
            this.Reset__ = this.__Factory__.Get<ICallable<Qubit, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Reset));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<RFStest1, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 88, 110)]
    public partial class RFStest2 : Operation<QVoid, QVoid>, ICallable
    {
        public RFStest2(IOperationFactory m) : base(m)
        {
        }

        public class QuantumSimulator
        {
            public QuantumSimulator(Xunit.Abstractions.ITestOutputHelper Output)
            {
                this.Output = Output;
            }

            internal Xunit.Abstractions.ITestOutputHelper Output
            {
                get;
            }

            [Xunit.Fact()]
            [Xunit.Trait("Target", "QuantumSimulator")]
            [Xunit.Trait("Name", "RFStest2")]
            public void RFStest2()
#line 88 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            {
                var sim = new Microsoft.Quantum.Simulation.Simulators.QuantumSimulator();
                if (sim is Microsoft.Quantum.Simulation.Common.SimulatorBase baseSim && this.Output != null)
                {
                    baseSim.OnLog += this.Output.WriteLine;
                }

                try
                {
                    sim.Execute<RFStest2, QVoid, QVoid>(QVoid.Instance);
                }
                catch
                {
#line 88 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                    Xunit.Assert.True(false, "Q# Test failed. For details see the Standard output below.");
                }
                finally
                {
                    if (sim is IDisposable disposeSim)
                    {
                        disposeSim.Dispose();
                    }
                }
            }
        }

        String ICallable.Name => "RFStest2";
        String ICallable.FullName => "files.RFStest2";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<(Qubit,Qubit,Qubit,IQArray<Qubit>), QVoid> RFS__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Canon__ApplyToEach
        {
            get;
            set;
        }

        protected IUnitary<IQArray<Qubit>> Microsoft__Quantum__Diagnostics__AssertAllZero
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> Reset__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 89 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var a = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 90 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var b = Allocate__.Apply();
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line hidden
                            {
#line 91 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                var c = Allocate__.Apply();
#line hidden
                                bool __arg3__ = true;
                                try
                                {
#line hidden
                                    {
#line 92 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                        var output = Allocate__.Apply(5L);
#line hidden
                                        bool __arg4__ = true;
                                        try
                                        {
#line 94 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Microsoft__Quantum__Intrinsic__X.Apply(a);
#line 95 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Microsoft__Quantum__Intrinsic__X.Apply(b);
#line 96 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Microsoft__Quantum__Intrinsic__X.Apply(c);
#line 98 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            RFS__.Apply((a, b, c, output));
#line 100 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Microsoft__Quantum__Canon__ApplyToEach.Apply((Microsoft__Quantum__Intrinsic__X, output));
#line 101 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Microsoft__Quantum__Diagnostics__AssertAllZero.Apply(output);
#line 103 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Reset__.Apply(a);
#line 104 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Reset__.Apply(b);
#line 105 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Reset__.Apply(c);
#line 106 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            ResetAll__.Apply(output);
                                        }
#line hidden
                                        catch
                                        {
                                            __arg4__ = false;
                                            throw;
                                        }
#line hidden
                                        finally
                                        {
                                            if (__arg4__)
                                            {
#line hidden
                                                Release__.Apply(output);
                                            }
                                        }
                                    }
                                }
#line hidden
                                catch
                                {
                                    __arg3__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg3__)
                                    {
#line hidden
                                        Release__.Apply(c);
                                    }
                                }
                            }
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(b);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(a);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.RFS__ = this.__Factory__.Get<ICallable<(Qubit,Qubit,Qubit,IQArray<Qubit>), QVoid>>(typeof(RFS));
            this.Microsoft__Quantum__Canon__ApplyToEach = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Canon.ApplyToEach<>));
            this.Microsoft__Quantum__Diagnostics__AssertAllZero = this.__Factory__.Get<IUnitary<IQArray<Qubit>>>(typeof(global::Microsoft.Quantum.Diagnostics.AssertAllZero));
            this.Reset__ = this.__Factory__.Get<ICallable<Qubit, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Reset));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<RFStest2, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 110, 134)]
    public partial class RFStest3 : Operation<QVoid, QVoid>, ICallable
    {
        public RFStest3(IOperationFactory m) : base(m)
        {
        }

        public class QuantumSimulator
        {
            public QuantumSimulator(Xunit.Abstractions.ITestOutputHelper Output)
            {
                this.Output = Output;
            }

            internal Xunit.Abstractions.ITestOutputHelper Output
            {
                get;
            }

            [Xunit.Fact()]
            [Xunit.Trait("Target", "QuantumSimulator")]
            [Xunit.Trait("Name", "RFStest3")]
            public void RFStest3()
#line 110 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            {
                var sim = new Microsoft.Quantum.Simulation.Simulators.QuantumSimulator();
                if (sim is Microsoft.Quantum.Simulation.Common.SimulatorBase baseSim && this.Output != null)
                {
                    baseSim.OnLog += this.Output.WriteLine;
                }

                try
                {
                    sim.Execute<RFStest3, QVoid, QVoid>(QVoid.Instance);
                }
                catch
                {
#line 110 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                    Xunit.Assert.True(false, "Q# Test failed. For details see the Standard output below.");
                }
                finally
                {
                    if (sim is IDisposable disposeSim)
                    {
                        disposeSim.Dispose();
                    }
                }
            }
        }

        String ICallable.Name => "RFStest3";
        String ICallable.FullName => "files.RFStest3";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<(Qubit,Qubit,Qubit,IQArray<Qubit>), QVoid> RFS__
        {
            get;
            set;
        }

        protected IUnitary<(Result,Qubit)> Microsoft__Quantum__Diagnostics__AssertQubit
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> Reset__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 111 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var a = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 112 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var b = Allocate__.Apply();
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line hidden
                            {
#line 113 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                var c = Allocate__.Apply();
#line hidden
                                bool __arg3__ = true;
                                try
                                {
#line hidden
                                    {
#line 114 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                        var output = Allocate__.Apply(5L);
#line hidden
                                        bool __arg4__ = true;
                                        try
                                        {
#line 116 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Microsoft__Quantum__Intrinsic__X.Apply(a);
#line 117 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Microsoft__Quantum__Intrinsic__X.Apply(c);
#line 119 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            RFS__.Apply((a, b, c, output));
#line 125 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Microsoft__Quantum__Diagnostics__AssertQubit.Apply((Result.Zero, output[4L]));
#line 127 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Reset__.Apply(a);
#line 128 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Reset__.Apply(b);
#line 129 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Reset__.Apply(c);
#line 130 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            ResetAll__.Apply(output);
                                        }
#line hidden
                                        catch
                                        {
                                            __arg4__ = false;
                                            throw;
                                        }
#line hidden
                                        finally
                                        {
                                            if (__arg4__)
                                            {
#line hidden
                                                Release__.Apply(output);
                                            }
                                        }
                                    }
                                }
#line hidden
                                catch
                                {
                                    __arg3__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg3__)
                                    {
#line hidden
                                        Release__.Apply(c);
                                    }
                                }
                            }
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(b);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(a);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.RFS__ = this.__Factory__.Get<ICallable<(Qubit,Qubit,Qubit,IQArray<Qubit>), QVoid>>(typeof(RFS));
            this.Microsoft__Quantum__Diagnostics__AssertQubit = this.__Factory__.Get<IUnitary<(Result,Qubit)>>(typeof(global::Microsoft.Quantum.Diagnostics.AssertQubit));
            this.Reset__ = this.__Factory__.Get<ICallable<Qubit, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Reset));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<RFStest3, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 134, 153)]
    public partial class COtest1 : Operation<QVoid, QVoid>, ICallable
    {
        public COtest1(IOperationFactory m) : base(m)
        {
        }

        public class QuantumSimulator
        {
            public QuantumSimulator(Xunit.Abstractions.ITestOutputHelper Output)
            {
                this.Output = Output;
            }

            internal Xunit.Abstractions.ITestOutputHelper Output
            {
                get;
            }

            [Xunit.Fact()]
            [Xunit.Trait("Target", "QuantumSimulator")]
            [Xunit.Trait("Name", "COtest1")]
            public void COtest1()
#line 134 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            {
                var sim = new Microsoft.Quantum.Simulation.Simulators.QuantumSimulator();
                if (sim is Microsoft.Quantum.Simulation.Common.SimulatorBase baseSim && this.Output != null)
                {
                    baseSim.OnLog += this.Output.WriteLine;
                }

                try
                {
                    sim.Execute<COtest1, QVoid, QVoid>(QVoid.Instance);
                }
                catch
                {
#line 134 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                    Xunit.Assert.True(false, "Q# Test failed. For details see the Standard output below.");
                }
                finally
                {
                    if (sim is IDisposable disposeSim)
                    {
                        disposeSim.Dispose();
                    }
                }
            }
        }

        String ICallable.Name => "COtest1";
        String ICallable.FullName => "files.COtest1";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Canon__ApplyToEach
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,IQArray<Qubit>), QVoid> CO__
        {
            get;
            set;
        }

        protected IUnitary<(Result,Qubit)> Microsoft__Quantum__Diagnostics__AssertQubit
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 135 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var input = Allocate__.Apply(6L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 136 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var output = Allocate__.Apply(5L);
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line 138 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Canon__ApplyToEach.Apply((Microsoft__Quantum__Intrinsic__X, input.Slice(new QRange(0L, 3L))));
#line 140 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            CO__.Apply((input, output));
#line 146 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Diagnostics__AssertQubit.Apply((Result.Zero, output[4L]));
#line 148 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            ResetAll__.Apply(input);
#line 149 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            ResetAll__.Apply(output);
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(output);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(input);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Canon__ApplyToEach = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Canon.ApplyToEach<>));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.CO__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,IQArray<Qubit>), QVoid>>(typeof(CO));
            this.Microsoft__Quantum__Diagnostics__AssertQubit = this.__Factory__.Get<IUnitary<(Result,Qubit)>>(typeof(global::Microsoft.Quantum.Diagnostics.AssertQubit));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<COtest1, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 153, 174)]
    public partial class COtest2 : Operation<QVoid, QVoid>, ICallable
    {
        public COtest2(IOperationFactory m) : base(m)
        {
        }

        public class QuantumSimulator
        {
            public QuantumSimulator(Xunit.Abstractions.ITestOutputHelper Output)
            {
                this.Output = Output;
            }

            internal Xunit.Abstractions.ITestOutputHelper Output
            {
                get;
            }

            [Xunit.Fact()]
            [Xunit.Trait("Target", "QuantumSimulator")]
            [Xunit.Trait("Name", "COtest2")]
            public void COtest2()
#line 153 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            {
                var sim = new Microsoft.Quantum.Simulation.Simulators.QuantumSimulator();
                if (sim is Microsoft.Quantum.Simulation.Common.SimulatorBase baseSim && this.Output != null)
                {
                    baseSim.OnLog += this.Output.WriteLine;
                }

                try
                {
                    sim.Execute<COtest2, QVoid, QVoid>(QVoid.Instance);
                }
                catch
                {
#line 153 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                    Xunit.Assert.True(false, "Q# Test failed. For details see the Standard output below.");
                }
                finally
                {
                    if (sim is IDisposable disposeSim)
                    {
                        disposeSim.Dispose();
                    }
                }
            }
        }

        String ICallable.Name => "COtest2";
        String ICallable.FullName => "files.COtest2";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,IQArray<Qubit>), QVoid> CO__
        {
            get;
            set;
        }

        protected IUnitary<(Result,Qubit)> Microsoft__Quantum__Diagnostics__AssertQubit
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 154 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var input = Allocate__.Apply(6L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 155 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var output = Allocate__.Apply(5L);
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line 157 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__X.Apply(input[1L]);
#line 158 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__X.Apply(input[3L]);
#line 159 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__X.Apply(input[5L]);
#line 161 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            CO__.Apply((input, output));
#line 167 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Diagnostics__AssertQubit.Apply((Result.One, output[4L]));
#line 169 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            ResetAll__.Apply(input);
#line 170 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            ResetAll__.Apply(output);
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(output);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(input);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.CO__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,IQArray<Qubit>), QVoid>>(typeof(CO));
            this.Microsoft__Quantum__Diagnostics__AssertQubit = this.__Factory__.Get<IUnitary<(Result,Qubit)>>(typeof(global::Microsoft.Quantum.Diagnostics.AssertQubit));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<COtest2, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 174, 196)]
    public partial class COtest3 : Operation<QVoid, QVoid>, ICallable
    {
        public COtest3(IOperationFactory m) : base(m)
        {
        }

        public class QuantumSimulator
        {
            public QuantumSimulator(Xunit.Abstractions.ITestOutputHelper Output)
            {
                this.Output = Output;
            }

            internal Xunit.Abstractions.ITestOutputHelper Output
            {
                get;
            }

            [Xunit.Fact()]
            [Xunit.Trait("Target", "QuantumSimulator")]
            [Xunit.Trait("Name", "COtest3")]
            public void COtest3()
#line 174 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            {
                var sim = new Microsoft.Quantum.Simulation.Simulators.QuantumSimulator();
                if (sim is Microsoft.Quantum.Simulation.Common.SimulatorBase baseSim && this.Output != null)
                {
                    baseSim.OnLog += this.Output.WriteLine;
                }

                try
                {
                    sim.Execute<COtest3, QVoid, QVoid>(QVoid.Instance);
                }
                catch
                {
#line 174 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                    Xunit.Assert.True(false, "Q# Test failed. For details see the Standard output below.");
                }
                finally
                {
                    if (sim is IDisposable disposeSim)
                    {
                        disposeSim.Dispose();
                    }
                }
            }
        }

        String ICallable.Name => "COtest3";
        String ICallable.FullName => "files.COtest3";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Canon__ApplyToEach
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,IQArray<Qubit>), QVoid> CO__
        {
            get;
            set;
        }

        protected IUnitary<(Result,Qubit)> Microsoft__Quantum__Diagnostics__AssertQubit
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 175 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var input = Allocate__.Apply(7L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 176 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var output = Allocate__.Apply(6L);
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line 178 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__X.Apply(input[0L]);
#line 179 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Canon__ApplyToEach.Apply((Microsoft__Quantum__Intrinsic__X, input.Slice(new QRange(2L, 4L))));
#line 180 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__X.Apply(input[6L]);
#line 182 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            CO__.Apply((input, output));
#line 189 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Diagnostics__AssertQubit.Apply((Result.One, output[5L]));
#line 191 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            ResetAll__.Apply(input);
#line 192 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            ResetAll__.Apply(output);
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(output);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(input);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Canon__ApplyToEach = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Canon.ApplyToEach<>));
            this.CO__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,IQArray<Qubit>), QVoid>>(typeof(CO));
            this.Microsoft__Quantum__Diagnostics__AssertQubit = this.__Factory__.Get<IUnitary<(Result,Qubit)>>(typeof(global::Microsoft.Quantum.Diagnostics.AssertQubit));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<COtest3, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 196, 214)]
    public partial class CAVtest1 : Operation<QVoid, QVoid>, ICallable
    {
        public CAVtest1(IOperationFactory m) : base(m)
        {
        }

        public class QuantumSimulator
        {
            public QuantumSimulator(Xunit.Abstractions.ITestOutputHelper Output)
            {
                this.Output = Output;
            }

            internal Xunit.Abstractions.ITestOutputHelper Output
            {
                get;
            }

            [Xunit.Fact()]
            [Xunit.Trait("Target", "QuantumSimulator")]
            [Xunit.Trait("Name", "CAVtest1")]
            public void CAVtest1()
#line 196 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            {
                var sim = new Microsoft.Quantum.Simulation.Simulators.QuantumSimulator();
                if (sim is Microsoft.Quantum.Simulation.Common.SimulatorBase baseSim && this.Output != null)
                {
                    baseSim.OnLog += this.Output.WriteLine;
                }

                try
                {
                    sim.Execute<CAVtest1, QVoid, QVoid>(QVoid.Instance);
                }
                catch
                {
#line 196 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                    Xunit.Assert.True(false, "Q# Test failed. For details see the Standard output below.");
                }
                finally
                {
                    if (sim is IDisposable disposeSim)
                    {
                        disposeSim.Dispose();
                    }
                }
            }
        }

        String ICallable.Name => "CAVtest1";
        String ICallable.FullName => "files.CAVtest1";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Canon__ApplyToEach
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,IQArray<Qubit>,IQArray<Qubit>), QVoid> CAV__
        {
            get;
            set;
        }

        protected IUnitary<IQArray<Qubit>> Microsoft__Quantum__Diagnostics__AssertAllZero
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 197 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var a = Allocate__.Apply(3L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 198 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var b = Allocate__.Apply(3L);
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line hidden
                            {
#line 199 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                var output = Allocate__.Apply(3L);
#line hidden
                                bool __arg3__ = true;
                                try
                                {
#line 201 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Canon__ApplyToEach.Apply((Microsoft__Quantum__Intrinsic__X, a));
#line 202 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Canon__ApplyToEach.Apply((Microsoft__Quantum__Intrinsic__X, b));
#line 204 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    CAV__.Apply((a, b, output));
#line 206 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Diagnostics__AssertAllZero.Apply(output);
#line 208 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    ResetAll__.Apply(a);
#line 209 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    ResetAll__.Apply(b);
#line 210 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    ResetAll__.Apply(output);
                                }
#line hidden
                                catch
                                {
                                    __arg3__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg3__)
                                    {
#line hidden
                                        Release__.Apply(output);
                                    }
                                }
                            }
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(b);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(a);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Canon__ApplyToEach = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Canon.ApplyToEach<>));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.CAV__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,IQArray<Qubit>,IQArray<Qubit>), QVoid>>(typeof(CAV));
            this.Microsoft__Quantum__Diagnostics__AssertAllZero = this.__Factory__.Get<IUnitary<IQArray<Qubit>>>(typeof(global::Microsoft.Quantum.Diagnostics.AssertAllZero));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<CAVtest1, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 214, 236)]
    public partial class CAVtest2 : Operation<QVoid, QVoid>, ICallable
    {
        public CAVtest2(IOperationFactory m) : base(m)
        {
        }

        public class QuantumSimulator
        {
            public QuantumSimulator(Xunit.Abstractions.ITestOutputHelper Output)
            {
                this.Output = Output;
            }

            internal Xunit.Abstractions.ITestOutputHelper Output
            {
                get;
            }

            [Xunit.Fact()]
            [Xunit.Trait("Target", "QuantumSimulator")]
            [Xunit.Trait("Name", "CAVtest2")]
            public void CAVtest2()
#line 214 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            {
                var sim = new Microsoft.Quantum.Simulation.Simulators.QuantumSimulator();
                if (sim is Microsoft.Quantum.Simulation.Common.SimulatorBase baseSim && this.Output != null)
                {
                    baseSim.OnLog += this.Output.WriteLine;
                }

                try
                {
                    sim.Execute<CAVtest2, QVoid, QVoid>(QVoid.Instance);
                }
                catch
                {
#line 214 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                    Xunit.Assert.True(false, "Q# Test failed. For details see the Standard output below.");
                }
                finally
                {
                    if (sim is IDisposable disposeSim)
                    {
                        disposeSim.Dispose();
                    }
                }
            }
        }

        String ICallable.Name => "CAVtest2";
        String ICallable.FullName => "files.CAVtest2";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,IQArray<Qubit>,IQArray<Qubit>), QVoid> CAV__
        {
            get;
            set;
        }

        protected IUnitary<(Result,Qubit)> Microsoft__Quantum__Diagnostics__AssertQubit
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 215 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var a = Allocate__.Apply(3L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 216 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var b = Allocate__.Apply(3L);
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line hidden
                            {
#line 217 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                var output = Allocate__.Apply(3L);
#line hidden
                                bool __arg3__ = true;
                                try
                                {
#line 219 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Intrinsic__X.Apply(a[0L]);
#line 220 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Intrinsic__X.Apply(a[2L]);
#line 221 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Intrinsic__X.Apply(b[0L]);
#line 222 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Intrinsic__X.Apply(b[1L]);
#line 224 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    CAV__.Apply((a, b, output));
#line 228 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Diagnostics__AssertQubit.Apply((Result.One, output[2L]));
#line 230 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    ResetAll__.Apply(a);
#line 231 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    ResetAll__.Apply(b);
#line 232 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    ResetAll__.Apply(output);
                                }
#line hidden
                                catch
                                {
                                    __arg3__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg3__)
                                    {
#line hidden
                                        Release__.Apply(output);
                                    }
                                }
                            }
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(b);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(a);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.CAV__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,IQArray<Qubit>,IQArray<Qubit>), QVoid>>(typeof(CAV));
            this.Microsoft__Quantum__Diagnostics__AssertQubit = this.__Factory__.Get<IUnitary<(Result,Qubit)>>(typeof(global::Microsoft.Quantum.Diagnostics.AssertQubit));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<CAVtest2, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 236, 258)]
    public partial class CAVtest3 : Operation<QVoid, QVoid>, ICallable
    {
        public CAVtest3(IOperationFactory m) : base(m)
        {
        }

        public class QuantumSimulator
        {
            public QuantumSimulator(Xunit.Abstractions.ITestOutputHelper Output)
            {
                this.Output = Output;
            }

            internal Xunit.Abstractions.ITestOutputHelper Output
            {
                get;
            }

            [Xunit.Fact()]
            [Xunit.Trait("Target", "QuantumSimulator")]
            [Xunit.Trait("Name", "CAVtest3")]
            public void CAVtest3()
#line 236 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            {
                var sim = new Microsoft.Quantum.Simulation.Simulators.QuantumSimulator();
                if (sim is Microsoft.Quantum.Simulation.Common.SimulatorBase baseSim && this.Output != null)
                {
                    baseSim.OnLog += this.Output.WriteLine;
                }

                try
                {
                    sim.Execute<CAVtest3, QVoid, QVoid>(QVoid.Instance);
                }
                catch
                {
#line 236 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                    Xunit.Assert.True(false, "Q# Test failed. For details see the Standard output below.");
                }
                finally
                {
                    if (sim is IDisposable disposeSim)
                    {
                        disposeSim.Dispose();
                    }
                }
            }
        }

        String ICallable.Name => "CAVtest3";
        String ICallable.FullName => "files.CAVtest3";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,IQArray<Qubit>,IQArray<Qubit>), QVoid> CAV__
        {
            get;
            set;
        }

        protected IUnitary<(Result,Qubit)> Microsoft__Quantum__Diagnostics__AssertQubit
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 237 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var a = Allocate__.Apply(2L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 238 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var b = Allocate__.Apply(2L);
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line hidden
                            {
#line 239 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                var output = Allocate__.Apply(2L);
#line hidden
                                bool __arg3__ = true;
                                try
                                {
#line 241 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Intrinsic__X.Apply(a[1L]);
#line 242 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Intrinsic__X.Apply(b[0L]);
#line 244 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    CAV__.Apply((a, b, output));
#line 247 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Diagnostics__AssertQubit.Apply((Result.One, output[1L]));
#line 249 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    ResetAll__.Apply(a);
#line 250 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    ResetAll__.Apply(b);
#line 251 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    ResetAll__.Apply(output);
                                }
#line hidden
                                catch
                                {
                                    __arg3__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg3__)
                                    {
#line hidden
                                        Release__.Apply(output);
                                    }
                                }
                            }
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(b);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(a);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.CAV__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,IQArray<Qubit>,IQArray<Qubit>), QVoid>>(typeof(CAV));
            this.Microsoft__Quantum__Diagnostics__AssertQubit = this.__Factory__.Get<IUnitary<(Result,Qubit)>>(typeof(global::Microsoft.Quantum.Diagnostics.AssertQubit));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<CAVtest3, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 258, 267)]
    public partial class V : Operation<Qubit, QVoid>, ICallable
    {
        public V(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "V";
        String ICallable.FullName => "files.V";
        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Rx
        {
            get;
            set;
        }

        protected ICallable<QVoid, Double> Microsoft__Quantum__Math__PI
        {
            get;
            set;
        }

        public override Func<Qubit, QVoid> __Body__ => (__in__) =>
        {
            var input = __in__;
#line 259 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            Microsoft__Quantum__Intrinsic__Rx.Apply(((Microsoft__Quantum__Math__PI.Apply(QVoid.Instance) / 2D), input));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Intrinsic__Rx = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Rx));
            this.Microsoft__Quantum__Math__PI = this.__Factory__.Get<ICallable<QVoid, Double>>(typeof(global::Microsoft.Quantum.Math.PI));
        }

        public override IApplyData __DataIn__(Qubit data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit input)
        {
            return __m__.Run<V, Qubit, QVoid>(input);
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 267, 293)]
    public partial class RHS : Operation<(Qubit,Qubit,IQArray<Qubit>), QVoid>, ICallable
    {
        public RHS(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,Qubit,IQArray<Qubit>)>, IApplyData
        {
            public In((Qubit,Qubit,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits, ((IApplyData)Data.Item3)?.Qubits);
                }
            }
        }

        String ICallable.Name => "RHS";
        String ICallable.FullName => "files.RHS";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Rx
        {
            get;
            set;
        }

        protected ICallable<QVoid, Double> Microsoft__Quantum__Math__PI
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> Reset__
        {
            get;
            set;
        }

        public override Func<(Qubit,Qubit,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (aQubit,bQubit,outputRegister) = __in__;
#line hidden
            {
#line 268 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var carry = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 269 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var newAQubit = Allocate__.Apply();
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line 272 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__Rx.Adjoint.Controlled.Apply((new QArray<Qubit>(aQubit), ((Microsoft__Quantum__Math__PI.Apply(QVoid.Instance) / 2D), carry)));
#line 273 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((aQubit, newAQubit));
#line 274 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((bQubit, aQubit));
#line 275 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__Rx.Controlled.Apply((new QArray<Qubit>(bQubit), ((Microsoft__Quantum__Math__PI.Apply(QVoid.Instance) / 2D), carry)));
#line 276 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__Rx.Controlled.Apply((new QArray<Qubit>(aQubit), ((Microsoft__Quantum__Math__PI.Apply(QVoid.Instance) / 2D), carry)));
#line 279 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((bQubit, outputRegister[0L]));
#line 280 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((newAQubit, outputRegister[1L]));
#line 281 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((aQubit, outputRegister[2L]));
#line 282 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((carry, outputRegister[3L]));
#line 284 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Reset__.Apply(carry);
#line 285 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Reset__.Apply(newAQubit);
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(newAQubit);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(carry);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__Rx = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Rx));
            this.Microsoft__Quantum__Math__PI = this.__Factory__.Get<ICallable<QVoid, Double>>(typeof(global::Microsoft.Quantum.Math.PI));
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
            this.Reset__ = this.__Factory__.Get<ICallable<Qubit, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Reset));
        }

        public override IApplyData __DataIn__((Qubit,Qubit,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit aQubit, Qubit bQubit, IQArray<Qubit> outputRegister)
        {
            return __m__.Run<RHS, (Qubit,Qubit,IQArray<Qubit>), QVoid>((aQubit, bQubit, outputRegister));
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 293, 322)]
    public partial class RFS : Operation<(Qubit,Qubit,Qubit,IQArray<Qubit>), QVoid>, ICallable
    {
        public RFS(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,Qubit,Qubit,IQArray<Qubit>)>, IApplyData
        {
            public In((Qubit,Qubit,Qubit,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits, ((IApplyData)Data.Item3)?.Qubits, ((IApplyData)Data.Item4)?.Qubits);
                }
            }
        }

        String ICallable.Name => "RFS";
        String ICallable.FullName => "files.RFS";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Rx
        {
            get;
            set;
        }

        protected ICallable<QVoid, Double> Microsoft__Quantum__Math__PI
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> Reset__
        {
            get;
            set;
        }

        public override Func<(Qubit,Qubit,Qubit,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (aQubit,bQubit,cQubit,outputRegister) = __in__;
#line hidden
            {
#line 294 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var carry = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 295 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var newAQubit = Allocate__.Apply();
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line 298 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__Rx.Adjoint.Controlled.Apply((new QArray<Qubit>(aQubit), ((Microsoft__Quantum__Math__PI.Apply(QVoid.Instance) / 2D), carry)));
#line 299 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((aQubit, newAQubit));
#line 300 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((bQubit, aQubit));
#line 301 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__Rx.Controlled.Apply((new QArray<Qubit>(bQubit), ((Microsoft__Quantum__Math__PI.Apply(QVoid.Instance) / 2D), carry)));
#line 302 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((cQubit, aQubit));
#line 303 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__Rx.Controlled.Apply((new QArray<Qubit>(cQubit), ((Microsoft__Quantum__Math__PI.Apply(QVoid.Instance) / 2D), carry)));
#line 304 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__Rx.Controlled.Apply((new QArray<Qubit>(aQubit), ((Microsoft__Quantum__Math__PI.Apply(QVoid.Instance) / 2D), carry)));
#line 307 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((cQubit, outputRegister[0L]));
#line 308 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((bQubit, outputRegister[1L]));
#line 309 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((newAQubit, outputRegister[2L]));
#line 310 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((aQubit, outputRegister[3L]));
#line 311 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((carry, outputRegister[4L]));
#line 313 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Reset__.Apply(carry);
#line 314 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Reset__.Apply(newAQubit);
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(newAQubit);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(carry);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__Rx = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Rx));
            this.Microsoft__Quantum__Math__PI = this.__Factory__.Get<ICallable<QVoid, Double>>(typeof(global::Microsoft.Quantum.Math.PI));
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
            this.Reset__ = this.__Factory__.Get<ICallable<Qubit, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Reset));
        }

        public override IApplyData __DataIn__((Qubit,Qubit,Qubit,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit aQubit, Qubit bQubit, Qubit cQubit, IQArray<Qubit> outputRegister)
        {
            return __m__.Run<RFS, (Qubit,Qubit,Qubit,IQArray<Qubit>), QVoid>((aQubit, bQubit, cQubit, outputRegister));
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 322, 356)]
    public partial class CO : Operation<(IQArray<Qubit>,IQArray<Qubit>), QVoid>, ICallable
    {
        public CO(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,IQArray<Qubit>)>, IApplyData
        {
            public In((IQArray<Qubit>,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "CO";
        String ICallable.FullName => "files.CO";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (sRegister,outputRegister) = __in__;
#line 323 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            var len = sRegister.Length;
#line 327 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            foreach (var i in new QRange(0L, (len - 2L)))
#line hidden
            {
#line 328 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                Microsoft__Quantum__Intrinsic__CNOT.Apply((sRegister[0L], sRegister[(1L + i)]));
            }

#line 332 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            foreach (var i in new QRange(0L, (len - 2L)))
#line hidden
            {
#line hidden
                {
#line 334 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                    var controlRegister = Allocate__.Apply(((len - 1L) - i));
#line hidden
                    bool __arg1__ = true;
                    try
                    {
#line 336 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        Microsoft__Quantum__Intrinsic__CNOT.Apply((sRegister[0L], controlRegister[0L]));
#line 338 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        foreach (var j in new QRange((2L + i), (len - 2L)))
#line hidden
                        {
#line 339 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((sRegister[j], controlRegister[((j - 1L) - i)]));
                        }

#line 342 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        Microsoft__Quantum__Intrinsic__X.Controlled.Apply((controlRegister, sRegister[(1L + i)]));
#line 343 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        ResetAll__.Apply(controlRegister);
                    }
#line hidden
                    catch
                    {
                        __arg1__ = false;
                        throw;
                    }
#line hidden
                    finally
                    {
                        if (__arg1__)
                        {
#line hidden
                            Release__.Apply(controlRegister);
                        }
                    }
                }
            }

#line 346 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            foreach (var i in new QRange(0L, (len - 2L)))
#line hidden
            {
#line 347 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                Microsoft__Quantum__Intrinsic__CNOT.Apply((sRegister[(i + 1L)], outputRegister[i]));
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> sRegister, IQArray<Qubit> outputRegister)
        {
            return __m__.Run<CO, (IQArray<Qubit>,IQArray<Qubit>), QVoid>((sRegister, outputRegister));
        }
    }

    [SourceLocation("C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs", OperationFunctor.Body, 356, -1)]
    public partial class CAV : Operation<(IQArray<Qubit>,IQArray<Qubit>,IQArray<Qubit>), QVoid>, ICallable
    {
        public CAV(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,IQArray<Qubit>,IQArray<Qubit>)>, IApplyData
        {
            public In((IQArray<Qubit>,IQArray<Qubit>,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits, ((IApplyData)Data.Item3)?.Qubits);
                }
            }
        }

        String ICallable.Name => "CAV";
        String ICallable.FullName => "files.CAV";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable<(Qubit,Qubit,IQArray<Qubit>), QVoid> RHS__
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        protected ICallable<(Qubit,Qubit,Qubit,IQArray<Qubit>), QVoid> RFS__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,IQArray<Qubit>), QVoid> CO__
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,IQArray<Qubit>,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (aRegister,bRegister,outputRegister) = __in__;
#line 357 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
            var len = aRegister.Length;
#line hidden
            {
#line 358 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                var halfOutput = Allocate__.Apply(4L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 359 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                        var fullOutput = Allocate__.Apply(5L);
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line hidden
                            {
#line 360 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                var sRegister = Allocate__.Apply((len + 1L));
#line hidden
                                bool __arg3__ = true;
                                try
                                {
#line 361 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    RHS__.Apply((aRegister[(len - 1L)], bRegister[(len - 1L)], halfOutput));
#line 362 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Intrinsic__CNOT.Apply((halfOutput[2L], sRegister[len]));
#line 364 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    RFS__.Apply((aRegister[(len - 2L)], bRegister[(len - 2L)], halfOutput[3L], fullOutput));
#line 365 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    Microsoft__Quantum__Intrinsic__CNOT.Apply((fullOutput[3L], sRegister[(len - 1L)]));
#line 367 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                    foreach (var i in new QRange((len - 3L), -(1L), 1L))
#line hidden
                                    {
#line hidden
                                        {
#line 368 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            var intermediaryRegister = Allocate__.Apply(5L);
#line hidden
                                            bool __arg4__ = true;
                                            try
                                            {
#line 369 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                                RFS__.Apply((aRegister[i], bRegister[i], fullOutput[4L], intermediaryRegister));
#line 370 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                                Microsoft__Quantum__Intrinsic__CNOT.Apply((fullOutput[3L], sRegister[(i + 1L)]));
#line 371 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                                ResetAll__.Apply(fullOutput);
#line 373 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                                foreach (var j in new QRange(0L, 4L))
#line hidden
                                                {
#line 373 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                                    Microsoft__Quantum__Intrinsic__CNOT.Apply((intermediaryRegister[j], fullOutput[j]));
                                                }

#line 374 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                                ResetAll__.Apply(intermediaryRegister);
                                            }
#line hidden
                                            catch
                                            {
                                                __arg4__ = false;
                                                throw;
                                            }
#line hidden
                                            finally
                                            {
                                                if (__arg4__)
                                                {
#line hidden
                                                    Release__.Apply(intermediaryRegister);
                                                }
                                            }
                                        }
                                    }

#line hidden
                                    {
#line 377 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                        var intermediaryRegister = Allocate__.Apply(5L);
#line hidden
                                        bool __arg5__ = true;
                                        try
                                        {
#line 378 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            RFS__.Apply((aRegister[0L], bRegister[0L], fullOutput[4L], intermediaryRegister));
#line 379 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Microsoft__Quantum__Intrinsic__CNOT.Apply((fullOutput[3L], sRegister[1L]));
#line 380 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            Microsoft__Quantum__Intrinsic__CNOT.Apply((intermediaryRegister[4L], sRegister[0L]));
#line 382 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            CO__.Apply((sRegister, outputRegister));
#line 383 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            ResetAll__.Apply(halfOutput);
#line 384 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            ResetAll__.Apply(fullOutput);
#line 385 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            ResetAll__.Apply(sRegister);
#line 386 "C:\\Users\\DotTheBot\\Desktop\\AbsoluteValueCalculator\\absolutevaluecalculator\\Tests.qs"
                                            ResetAll__.Apply(intermediaryRegister);
                                        }
#line hidden
                                        catch
                                        {
                                            __arg5__ = false;
                                            throw;
                                        }
#line hidden
                                        finally
                                        {
                                            if (__arg5__)
                                            {
#line hidden
                                                Release__.Apply(intermediaryRegister);
                                            }
                                        }
                                    }
                                }
#line hidden
                                catch
                                {
                                    __arg3__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg3__)
                                    {
#line hidden
                                        Release__.Apply(sRegister);
                                    }
                                }
                            }
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(fullOutput);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(halfOutput);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.RHS__ = this.__Factory__.Get<ICallable<(Qubit,Qubit,IQArray<Qubit>), QVoid>>(typeof(RHS));
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
            this.RFS__ = this.__Factory__.Get<ICallable<(Qubit,Qubit,Qubit,IQArray<Qubit>), QVoid>>(typeof(RFS));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
            this.CO__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,IQArray<Qubit>), QVoid>>(typeof(CO));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,IQArray<Qubit>,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> aRegister, IQArray<Qubit> bRegister, IQArray<Qubit> outputRegister)
        {
            return __m__.Run<CAV, (IQArray<Qubit>,IQArray<Qubit>,IQArray<Qubit>), QVoid>((aRegister, bRegister, outputRegister));
        }
    }
}